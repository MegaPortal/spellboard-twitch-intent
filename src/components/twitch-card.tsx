/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/7fseD5L9W5W
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/
import { CardContent, CardFooter, Card } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import Image from "next/image"
import type { TwitchChannel, TwitchStream, TwitchUser } from "@/app/data-model"

export function TwitchCard(props: {
  user: TwitchUser | null,
  stream: TwitchStream | null,
  channel: TwitchChannel | null,
}) {
  return (
    <Card className="w-full max-w-sm shadow-sm overflow-hidden cursor-pointer group" onClick={() => {
      if (props.user?.login) {
        window.open(`https://www.twitch.tv/${props.user.login}`)
      }
    }}>
      <div className="aspect-[16/9]">
        <Image
          alt="Stream thumbnail"
          className="object-cover w-full h-full"
          height={100}
          src={ props.stream?.thumbnail_url?.replace("{width}", "300").replace("{height}", "168") || "/placeholder.svg" }
          style={{
            aspectRatio: "300/100",
            objectFit: "cover",
          }}
          width={300}
        />
      </div>
      <CardContent className="p-4">
        <div className="flex items-center gap-4">
          <Image
            alt="Profile picture"
            className="rounded-full"
            height={40}
            src={ props.user?.profile_image_url || props.user?.offline_image_url || "/placeholder.svg" }
            style={{
              aspectRatio: "40/40",
              objectFit: "cover",
            }}
            width={40}
          />
          <div className="flex flex-col">
            <h3 className="text-sm font-bold leading-none mb-2 line-clamp-1 group-hover:underline">{ props.stream ? props.stream.title : "Offline" }</h3>
            <h4 className="text-sm font-semibold leading-none">{ props.user?.display_name }</h4>
          </div>
        </div>
        <div className="flex flex-row justify-center items-center">
          <div className="flex-1">
            <div className="flex items-center gap-2 m-2">
              <PlayIcon className="w-4 h-4" />
              { props.stream ? 
                <span className="text-xs leading-none">Playing { props.stream?.game_name }</span>
                :
                <span className="text-xs leading-none">{ props.channel?.game_name }</span>
              }
            </div>
            <div className="flex items-center gap-2 m-2">
              <EyeIcon className="w-4 h-4" />
              { props.stream ? 
                <span className="text-xs leading-none">{ props.stream?.viewer_count } viewers</span>
                :
                <span className="text-xs leading-none">{ props.channel?.title }</span>
              }
            </div>
          </div>
          <div>
            <Button className="w-full" variant="outline">
              <TwitchIcon className="w-4 h-4" />
            </Button></div>
        </div>
      </CardContent>
    </Card>
  )
}

function EyeIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z" />
      <circle cx="12" cy="12" r="3" />
    </svg>
  )
}


function PlayIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <polygon points="6 3 20 12 6 21 6 3" />
    </svg>
  )
}


export function TwitchIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M21 2H3v16h5v4l4-4h5l4-4V2zm-10 9V7m5 4V7" />
    </svg>
  )
}
